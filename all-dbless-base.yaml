apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      cattle.io/status: '{"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2020-08-25T03:06:13Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2020-08-25T03:06:13Z"}]}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"kong"}}
      lifecycle.cattle.io/create.namespace-auth: "true"
    creationTimestamp: "2020-08-25T03:06:12Z"
    finalizers:
    - controller.cattle.io/namespace-auth
    name: kong
    resourceVersion: "21401646"
    selfLink: /api/v1/namespaces/kong
    uid: af6ee400-f1dd-45e8-8e82-61dea2bd955d
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"kongclusterplugins.configuration.konghq.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".plugin","description":"Name of the plugin","name":"Plugin-Type","type":"string"},{"JSONPath":".metadata.creationTimestamp","description":"Age","name":"Age","type":"date"},{"JSONPath":".disabled","description":"Indicates if the plugin is disabled","name":"Disabled","priority":1,"type":"boolean"},{"JSONPath":".config","description":"Configuration of the plugin","name":"Config","priority":1,"type":"string"}],"group":"configuration.konghq.com","names":{"kind":"KongClusterPlugin","plural":"kongclusterplugins","shortNames":["kcp"]},"scope":"Cluster","validation":{"openAPIV3Schema":{"properties":{"config":{"type":"object"},"configFrom":{"properties":{"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"required":["name","namespace","key"],"type":"object"}},"type":"object"},"disabled":{"type":"boolean"},"plugin":{"type":"string"},"protocols":{"items":{"enum":["http","https","grpc","grpcs","tcp","tls"],"type":"string"},"type":"array"},"run_on":{"enum":["first","second","all"],"type":"string"}},"required":["plugin"]}},"version":"v1"}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: kongclusterplugins.configuration.konghq.com
    resourceVersion: "21282571"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/kongclusterplugins.configuration.konghq.com
    uid: d9d46a21-f72a-43c8-b6ec-276ff677146e
  spec:
    additionalPrinterColumns:
    - JSONPath: .plugin
      description: Name of the plugin
      name: Plugin-Type
      type: string
    - JSONPath: .metadata.creationTimestamp
      description: Age
      name: Age
      type: date
    - JSONPath: .disabled
      description: Indicates if the plugin is disabled
      name: Disabled
      priority: 1
      type: boolean
    - JSONPath: .config
      description: Configuration of the plugin
      name: Config
      priority: 1
      type: string
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: KongClusterPlugin
      listKind: KongClusterPluginList
      plural: kongclusterplugins
      shortNames:
      - kcp
      singular: kongclusterplugin
    preserveUnknownFields: true
    scope: Cluster
    validation:
      openAPIV3Schema:
        properties:
          config:
            type: object
          configFrom:
            properties:
              secretKeyRef:
                properties:
                  key:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                - key
                type: object
            type: object
          disabled:
            type: boolean
          plugin:
            type: string
          protocols:
            items:
              enum:
              - http
              - https
              - grpc
              - grpcs
              - tcp
              - tls
              type: string
            type: array
          run_on:
            enum:
            - first
            - second
            - all
            type: string
        required:
        - plugin
    version: v1
    versions:
    - name: v1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: KongClusterPlugin
      listKind: KongClusterPluginList
      plural: kongclusterplugins
      shortNames:
      - kcp
      singular: kongclusterplugin
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: 'spec.validation.openAPIV3Schema.type: Required value: must not be
        empty at the root'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"kongconsumers.configuration.konghq.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".username","description":"Username of a Kong Consumer","name":"Username","type":"string"},{"JSONPath":".metadata.creationTimestamp","description":"Age","name":"Age","type":"date"}],"group":"configuration.konghq.com","names":{"kind":"KongConsumer","plural":"kongconsumers","shortNames":["kc"]},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"credentials":{"items":{"type":"string"},"type":"array"},"custom_id":{"type":"string"},"username":{"type":"string"}}}},"version":"v1"}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: kongconsumers.configuration.konghq.com
    resourceVersion: "21282577"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/kongconsumers.configuration.konghq.com
    uid: b4306733-01c3-4b75-a97d-15877956c644
  spec:
    additionalPrinterColumns:
    - JSONPath: .username
      description: Username of a Kong Consumer
      name: Username
      type: string
    - JSONPath: .metadata.creationTimestamp
      description: Age
      name: Age
      type: date
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: KongConsumer
      listKind: KongConsumerList
      plural: kongconsumers
      shortNames:
      - kc
      singular: kongconsumer
    preserveUnknownFields: true
    scope: Namespaced
    validation:
      openAPIV3Schema:
        properties:
          credentials:
            items:
              type: string
            type: array
          custom_id:
            type: string
          username:
            type: string
    version: v1
    versions:
    - name: v1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: KongConsumer
      listKind: KongConsumerList
      plural: kongconsumers
      shortNames:
      - kc
      singular: kongconsumer
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: 'spec.validation.openAPIV3Schema.type: Required value: must not be
        empty at the root'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"kongcredentials.configuration.konghq.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".type","description":"Type of credential","name":"Credential-type","type":"string"},{"JSONPath":".metadata.creationTimestamp","description":"Age","name":"Age","type":"date"},{"JSONPath":".consumerRef","description":"Owner of the credential","name":"Consumer-Ref","type":"string"}],"group":"configuration.konghq.com","names":{"kind":"KongCredential","plural":"kongcredentials"},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"consumerRef":{"type":"string"},"type":{"type":"string"}},"required":["consumerRef","type"]}},"version":"v1"}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: kongcredentials.configuration.konghq.com
    resourceVersion: "21282582"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/kongcredentials.configuration.konghq.com
    uid: a9a21b57-d11b-4e1e-9736-90f2d6ca8551
  spec:
    additionalPrinterColumns:
    - JSONPath: .type
      description: Type of credential
      name: Credential-type
      type: string
    - JSONPath: .metadata.creationTimestamp
      description: Age
      name: Age
      type: date
    - JSONPath: .consumerRef
      description: Owner of the credential
      name: Consumer-Ref
      type: string
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: KongCredential
      listKind: KongCredentialList
      plural: kongcredentials
      singular: kongcredential
    preserveUnknownFields: true
    scope: Namespaced
    validation:
      openAPIV3Schema:
        properties:
          consumerRef:
            type: string
          type:
            type: string
        required:
        - consumerRef
        - type
    version: v1
    versions:
    - name: v1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: KongCredential
      listKind: KongCredentialList
      plural: kongcredentials
      singular: kongcredential
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: 'spec.validation.openAPIV3Schema.type: Required value: must not be
        empty at the root'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"kongingresses.configuration.konghq.com"},"spec":{"group":"configuration.konghq.com","names":{"kind":"KongIngress","plural":"kongingresses","shortNames":["ki"]},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"proxy":{"properties":{"connect_timeout":{"minimum":0,"type":"integer"},"path":{"pattern":"^/.*$","type":"string"},"protocol":{"enum":["http","https","grpc","grpcs","tcp","tls"],"type":"string"},"read_timeout":{"minimum":0,"type":"integer"},"retries":{"minimum":0,"type":"integer"},"write_timeout":{"minimum":0,"type":"integer"}},"type":"object"},"route":{"properties":{"headers":{"additionalProperties":{"items":{"type":"string"},"type":"array"},"type":"object"},"https_redirect_status_code":{"type":"integer"},"methods":{"items":{"type":"string"},"type":"array"},"path_handling":{"enum":["v0","v1"],"type":"string"},"preserve_host":{"type":"boolean"},"protocols":{"items":{"enum":["http","https","grpc","grpcs","tcp","tls"],"type":"string"},"type":"array"},"regex_priority":{"type":"integer"},"strip_path":{"type":"boolean"}}},"upstream":{"properties":{"algorithm":{"enum":["round-robin","consistent-hashing","least-connections"],"type":"string"},"hash_fallback":{"type":"string"},"hash_fallback_header":{"type":"string"},"hash_on":{"type":"string"},"hash_on_cookie":{"type":"string"},"hash_on_cookie_path":{"type":"string"},"hash_on_header":{"type":"string"},"healthchecks":{"properties":{"active":{"properties":{"concurrency":{"minimum":1,"type":"integer"},"healthy":{"properties":{"http_statuses":{"items":{"type":"integer"},"type":"array"},"interval":{"minimum":0,"type":"integer"},"successes":{"minimum":0,"type":"integer"}},"type":"object"},"http_path":{"pattern":"^/.*$","type":"string"},"timeout":{"minimum":0,"type":"integer"},"unhealthy":{"properties":{"http_failures":{"minimum":0,"type":"integer"},"http_statuses":{"items":{"type":"integer"},"type":"array"},"interval":{"minimum":0,"type":"integer"},"tcp_failures":{"minimum":0,"type":"integer"},"timeout":{"minimum":0,"type":"integer"}},"type":"object"}},"type":"object"},"passive":{"properties":{"healthy":{"properties":{"http_statuses":{"items":{"type":"integer"},"type":"array"},"interval":{"minimum":0,"type":"integer"},"successes":{"minimum":0,"type":"integer"}},"type":"object"},"unhealthy":{"properties":{"http_failures":{"minimum":0,"type":"integer"},"http_statuses":{"items":{"type":"integer"},"type":"array"},"interval":{"minimum":0,"type":"integer"},"tcp_failures":{"minimum":0,"type":"integer"},"timeout":{"minimum":0,"type":"integer"}},"type":"object"}},"type":"object"},"threshold":{"type":"integer"}},"type":"object"},"host_header":{"type":"string"},"slots":{"minimum":10,"type":"integer"}},"type":"object"}}}},"version":"v1"}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: kongingresses.configuration.konghq.com
    resourceVersion: "21282588"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/kongingresses.configuration.konghq.com
    uid: 902ec110-8866-4ba1-9b7b-f943694b369a
  spec:
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: KongIngress
      listKind: KongIngressList
      plural: kongingresses
      shortNames:
      - ki
      singular: kongingress
    preserveUnknownFields: true
    scope: Namespaced
    validation:
      openAPIV3Schema:
        properties:
          proxy:
            properties:
              connect_timeout:
                minimum: 0
                type: integer
              path:
                pattern: ^/.*$
                type: string
              protocol:
                enum:
                - http
                - https
                - grpc
                - grpcs
                - tcp
                - tls
                type: string
              read_timeout:
                minimum: 0
                type: integer
              retries:
                minimum: 0
                type: integer
              write_timeout:
                minimum: 0
                type: integer
            type: object
          route:
            properties:
              headers:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              https_redirect_status_code:
                type: integer
              methods:
                items:
                  type: string
                type: array
              path_handling:
                enum:
                - v0
                - v1
                type: string
              preserve_host:
                type: boolean
              protocols:
                items:
                  enum:
                  - http
                  - https
                  - grpc
                  - grpcs
                  - tcp
                  - tls
                  type: string
                type: array
              regex_priority:
                type: integer
              strip_path:
                type: boolean
          upstream:
            properties:
              algorithm:
                enum:
                - round-robin
                - consistent-hashing
                - least-connections
                type: string
              hash_fallback:
                type: string
              hash_fallback_header:
                type: string
              hash_on:
                type: string
              hash_on_cookie:
                type: string
              hash_on_cookie_path:
                type: string
              hash_on_header:
                type: string
              healthchecks:
                properties:
                  active:
                    properties:
                      concurrency:
                        minimum: 1
                        type: integer
                      healthy:
                        properties:
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          successes:
                            minimum: 0
                            type: integer
                        type: object
                      http_path:
                        pattern: ^/.*$
                        type: string
                      timeout:
                        minimum: 0
                        type: integer
                      unhealthy:
                        properties:
                          http_failures:
                            minimum: 0
                            type: integer
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          tcp_failures:
                            minimum: 0
                            type: integer
                          timeout:
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  passive:
                    properties:
                      healthy:
                        properties:
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          successes:
                            minimum: 0
                            type: integer
                        type: object
                      unhealthy:
                        properties:
                          http_failures:
                            minimum: 0
                            type: integer
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          tcp_failures:
                            minimum: 0
                            type: integer
                          timeout:
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  threshold:
                    type: integer
                type: object
              host_header:
                type: string
              slots:
                minimum: 10
                type: integer
            type: object
    version: v1
    versions:
    - name: v1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: KongIngress
      listKind: KongIngressList
      plural: kongingresses
      shortNames:
      - ki
      singular: kongingress
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: '[spec.validation.openAPIV3Schema.properties[route].type: Required
        value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type:
        Required value: must not be empty at the root]'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"kongplugins.configuration.konghq.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".plugin","description":"Name of the plugin","name":"Plugin-Type","type":"string"},{"JSONPath":".metadata.creationTimestamp","description":"Age","name":"Age","type":"date"},{"JSONPath":".disabled","description":"Indicates if the plugin is disabled","name":"Disabled","priority":1,"type":"boolean"},{"JSONPath":".config","description":"Configuration of the plugin","name":"Config","priority":1,"type":"string"}],"group":"configuration.konghq.com","names":{"kind":"KongPlugin","plural":"kongplugins","shortNames":["kp"]},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"config":{"type":"object"},"configFrom":{"properties":{"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"}},"required":["name","key"],"type":"object"}},"type":"object"},"disabled":{"type":"boolean"},"plugin":{"type":"string"},"protocols":{"items":{"enum":["http","https","grpc","grpcs","tcp","tls"],"type":"string"},"type":"array"},"run_on":{"enum":["first","second","all"],"type":"string"}},"required":["plugin"]}},"version":"v1"}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: kongplugins.configuration.konghq.com
    resourceVersion: "21282595"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/kongplugins.configuration.konghq.com
    uid: d56fce6c-f7f8-4303-b036-e9d2763f1ee2
  spec:
    additionalPrinterColumns:
    - JSONPath: .plugin
      description: Name of the plugin
      name: Plugin-Type
      type: string
    - JSONPath: .metadata.creationTimestamp
      description: Age
      name: Age
      type: date
    - JSONPath: .disabled
      description: Indicates if the plugin is disabled
      name: Disabled
      priority: 1
      type: boolean
    - JSONPath: .config
      description: Configuration of the plugin
      name: Config
      priority: 1
      type: string
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: KongPlugin
      listKind: KongPluginList
      plural: kongplugins
      shortNames:
      - kp
      singular: kongplugin
    preserveUnknownFields: true
    scope: Namespaced
    validation:
      openAPIV3Schema:
        properties:
          config:
            type: object
          configFrom:
            properties:
              secretKeyRef:
                properties:
                  key:
                    type: string
                  name:
                    type: string
                required:
                - name
                - key
                type: object
            type: object
          disabled:
            type: boolean
          plugin:
            type: string
          protocols:
            items:
              enum:
              - http
              - https
              - grpc
              - grpcs
              - tcp
              - tls
              type: string
            type: array
          run_on:
            enum:
            - first
            - second
            - all
            type: string
        required:
        - plugin
    version: v1
    versions:
    - name: v1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: KongPlugin
      listKind: KongPluginList
      plural: kongplugins
      shortNames:
      - kp
      singular: kongplugin
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: 'spec.validation.openAPIV3Schema.type: Required value: must not be
        empty at the root'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"name":"tcpingresses.configuration.konghq.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.loadBalancer.ingress[*].ip","description":"Address of the load balancer","name":"Address","type":"string"},{"JSONPath":".metadata.creationTimestamp","description":"Age","name":"Age","type":"date"}],"group":"configuration.konghq.com","names":{"kind":"TCPIngress","plural":"tcpingresses"},"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"metadata":{"type":"object"},"spec":{"properties":{"rules":{"items":{"properties":{"backend":{"properties":{"serviceName":{"type":"string"},"servicePort":{"format":"int32","type":"integer"}},"type":"object"},"host":{"type":"string"},"port":{"format":"int32","type":"integer"}},"type":"object"},"type":"array"},"tls":{"items":{"properties":{"hosts":{"items":{"type":"string"},"type":"array"},"secretName":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"type":"object"}}}},"version":"v1beta1"},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2020-08-25T02:25:31Z"
    generation: 1
    name: tcpingresses.configuration.konghq.com
    resourceVersion: "21282603"
    selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/tcpingresses.configuration.konghq.com
    uid: 1ee5d5af-59be-4ff1-b16a-0f788c699bc6
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.loadBalancer.ingress[*].ip
      description: Address of the load balancer
      name: Address
      type: string
    - JSONPath: .metadata.creationTimestamp
      description: Age
      name: Age
      type: date
    conversion:
      strategy: None
    group: configuration.konghq.com
    names:
      kind: TCPIngress
      listKind: TCPIngressList
      plural: tcpingresses
      singular: tcpingress
    preserveUnknownFields: true
    scope: Namespaced
    subresources:
      status: {}
    validation:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              rules:
                items:
                  properties:
                    backend:
                      properties:
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                      type: object
                    host:
                      type: string
                    port:
                      format: int32
                      type: integer
                  type: object
                type: array
              tls:
                items:
                  properties:
                    hosts:
                      items:
                        type: string
                      type: array
                    secretName:
                      type: string
                  type: object
                type: array
            type: object
          status:
            type: object
    version: v1beta1
    versions:
    - name: v1beta1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TCPIngress
      listKind: TCPIngressList
      plural: tcpingresses
      singular: tcpingress
    conditions:
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-08-25T02:25:31Z"
      message: 'spec.validation.openAPIV3Schema.type: Required value: must not be
        empty at the root'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    storedVersions:
    - v1beta1
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"kong-serviceaccount","namespace":"kong"}}
    creationTimestamp: "2020-08-25T03:06:12Z"
    name: kong-serviceaccount
    namespace: kong
    resourceVersion: "21401643"
    selfLink: /api/v1/namespaces/kong/serviceaccounts/kong-serviceaccount
    uid: 14f5bd7d-3c98-4ab5-ae7e-0e606c7c917b
  secrets:
  - name: kong-serviceaccount-token-zb2c2
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1beta1","kind":"ClusterRole","metadata":{"annotations":{},"name":"kong-ingress-clusterrole"},"rules":[{"apiGroups":[""],"resources":["endpoints","nodes","pods","secrets"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io","extensions","networking.internal.knative.dev"],"resources":["ingresses"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["networking.k8s.io","extensions","networking.internal.knative.dev"],"resources":["ingresses/status"],"verbs":["update"]},{"apiGroups":["configuration.konghq.com"],"resources":["tcpingresses/status"],"verbs":["update"]},{"apiGroups":["configuration.konghq.com"],"resources":["kongplugins","kongclusterplugins","kongcredentials","kongconsumers","kongingresses","tcpingresses"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create","get","update"]}]}
    creationTimestamp: "2020-08-25T02:25:31Z"
    name: kong-ingress-clusterrole
    resourceVersion: "21282608"
    selfLink: /apis/rbac.authorization.k8s.io/v1beta1/clusterroles/kong-ingress-clusterrole
    uid: 8de533c5-c7d1-480e-ac05-4fe405ee3081
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - nodes
    - pods
    - secrets
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    - extensions
    - networking.internal.knative.dev
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - networking.k8s.io
    - extensions
    - networking.internal.knative.dev
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - configuration.konghq.com
    resources:
    - tcpingresses/status
    verbs:
    - update
  - apiGroups:
    - configuration.konghq.com
    resources:
    - kongplugins
    - kongclusterplugins
    - kongcredentials
    - kongconsumers
    - kongingresses
    - tcpingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1beta1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"kong-ingress-clusterrole-nisa-binding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"kong-ingress-clusterrole"},"subjects":[{"kind":"ServiceAccount","name":"kong-serviceaccount","namespace":"kong"}]}
    creationTimestamp: "2020-08-25T02:25:32Z"
    name: kong-ingress-clusterrole-nisa-binding
    resourceVersion: "21282615"
    selfLink: /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/kong-ingress-clusterrole-nisa-binding
    uid: a75ad614-552b-4423-a82f-a2f6c51fc016
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kong-ingress-clusterrole
  subjects:
  - kind: ServiceAccount
    name: kong-serviceaccount
    namespace: kong
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      field.cattle.io/publicEndpoints: '[{"addresses":["47.113.105.44"],"port":80,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false},{"addresses":["47.113.105.44"],"port":443,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false},{"addresses":["47.113.105.44"],"port":8100,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false}]'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id":"lb-wz9nc7r25b64p97r2gpke","service.beta.kubernetes.io/alicloud-loadbalancer-address-type":"internet"},"name":"kong-proxy","namespace":"kong"},"spec":{"ports":[{"name":"proxy","port":80,"protocol":"TCP","targetPort":8000},{"name":"proxy-ssl","port":443,"protocol":"TCP","targetPort":8443},{"name":"metrics","port":8100,"targetPort":8100}],"selector":{"app":"ingress-kong"},"type":"LoadBalancer"}}
      service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id: lb-wz9nc7r25b64p97r2gpke
      service.beta.kubernetes.io/alibaba-cloud-loadbalancer-spec: slb.s1.small
      service.beta.kubernetes.io/alicloud-loadbalancer-address-type: internet
    creationTimestamp: "2020-08-25T03:06:12Z"
    name: kong-proxy
    namespace: kong
    resourceVersion: "369102946"
    selfLink: /api/v1/namespaces/kong/services/kong-proxy
    uid: 09e022f6-9b79-4a47-8d22-9d7d80356752
  spec:
    clusterIP: 10.0.44.41
    externalTrafficPolicy: Cluster
    ports:
    - name: proxy
      nodePort: 32240
      port: 80
      protocol: TCP
      targetPort: 8000
    - name: proxy-ssl
      nodePort: 32007
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: metrics
      nodePort: 31191
      port: 8100
      protocol: TCP
      targetPort: 8100
    selector:
      app: ingress-kong
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 47.113.105.44
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"kong-validation-webhook","namespace":"kong"},"spec":{"ports":[{"name":"webhook","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app":"ingress-kong"}}}
    creationTimestamp: "2020-08-25T03:06:13Z"
    name: kong-validation-webhook
    namespace: kong
    resourceVersion: "21401656"
    selfLink: /api/v1/namespaces/kong/services/kong-validation-webhook
    uid: ceed1c91-2c60-47f8-93c4-8b7146710e6f
  spec:
    clusterIP: 10.0.26.184
    ports:
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app: ingress-kong
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "14"
      field.cattle.io/publicEndpoints: '[{"addresses":["47.113.105.44"],"port":80,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false},{"addresses":["47.113.105.44"],"port":443,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false},{"addresses":["47.113.105.44"],"port":8100,"protocol":"TCP","serviceName":"kong:kong-proxy","allNodes":false}]'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ingress-kong"},"name":"ingress-kong","namespace":"kong"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ingress-kong"}},"template":{"metadata":{"annotations":{"kuma.io/gateway":"enabled","prometheus.io/port":"8100","prometheus.io/scrape":"true","traffic.sidecar.istio.io/includeInboundPorts":""},"labels":{"app":"ingress-kong"}},"spec":{"containers":[{"env":[{"name":"KONG_PROXY_LISTEN","value":"0.0.0.0:8000, 0.0.0.0:8443 ssl http2"},{"name":"KONG_ADMIN_LISTEN","value":"127.0.0.1:8444 ssl"},{"name":"KONG_STATUS_LISTEN","value":"0.0.0.0:8100"},{"name":"KONG_DATABASE","value":"off"},{"name":"KONG_NGINX_WORKER_PROCESSES","value":"1"},{"name":"KONG_ADMIN_ACCESS_LOG","value":"/dev/stdout"},{"name":"KONG_ADMIN_ERROR_LOG","value":"/dev/stderr"},{"name":"KONG_PROXY_ERROR_LOG","value":"/dev/stderr"}],"image":"kong:2.0","lifecycle":{"preStop":{"exec":{"command":["/bin/sh","-c","kong quit"]}}},"livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/status","port":8100,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"proxy","ports":[{"containerPort":8000,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"name":"proxy-ssl","protocol":"TCP"},{"containerPort":8100,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/status","port":8100,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"0.5","memory":"500Mi"}},"securityContext":{"runAsUser":1000}},{"env":[{"name":"CONTROLLER_KONG_ADMIN_URL","value":"https://127.0.0.1:8444"},{"name":"CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY","value":"true"},{"name":"CONTROLLER_PUBLISH_SERVICE","value":"kong/kong-proxy"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}}],"image":"kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller:0.9.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":10254,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"ingress-controller","ports":[{"containerPort":8080,"name":"webhook","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":10254,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1}}],"nodeSelector":{"kong":"true"},"serviceAccountName":"kong-serviceaccount"}}}}
    creationTimestamp: "2020-08-25T03:06:13Z"
    generation: 23
    labels:
      app: ingress-kong
    name: ingress-kong
    namespace: kong
    resourceVersion: "369124543"
    selfLink: /apis/apps/v1/namespaces/kong/deployments/ingress-kong
    uid: 168664c0-a6e6-4718-9106-85beb4159507
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ingress-kong
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kuma.io/gateway: enabled
          prometheus.io/port: "8100"
          prometheus.io/scrape: "true"
          traffic.sidecar.istio.io/includeInboundPorts: ""
        creationTimestamp: null
        labels:
          app: ingress-kong
      spec:
        containers:
        - env:
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8000, 0.0.0.0:8443 ssl http2
          - name: KONG_ADMIN_LISTEN
            value: 127.0.0.1:8444 ssl
          - name: KONG_STATUS_LISTEN
            value: 0.0.0.0:8100
          - name: KONG_DATABASE
            value: "off"
          - name: KONG_NGINX_WORKER_PROCESSES
            value: "1"
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          image: kong:2.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - kong quit
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: proxy
          ports:
          - containerPort: 8000
            name: proxy
            protocol: TCP
          - containerPort: 8443
            name: proxy-ssl
            protocol: TCP
          - containerPort: 8100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500Mi
          securityContext:
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: CONTROLLER_KONG_ADMIN_URL
            value: https://127.0.0.1:8444
          - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
            value: "true"
          - name: CONTROLLER_PUBLISH_SERVICE
            value: kong/kong-proxy
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller:0.9.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-controller
          ports:
          - containerPort: 8080
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kong: "true"
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kong-serviceaccount
        serviceAccountName: kong-serviceaccount
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-09-16T10:38:43Z"
      lastUpdateTime: "2020-09-16T10:38:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-08-25T03:06:13Z"
      lastUpdateTime: "2020-09-30T08:50:11Z"
      message: ReplicaSet "ingress-kong-5d9dc49558" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
    observedGeneration: 22
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
kind: List
metadata: {}
